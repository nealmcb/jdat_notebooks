Traceback (most recent call last):
  File "/usr/share/miniconda/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/usr/share/miniconda/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/share/miniconda/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/share/miniconda/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/share/miniconda/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/usr/share/miniconda/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/usr/share/miniconda/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/share/miniconda/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# NIRSpec IFU science data cube
BoxPath = "https://data.science.stsci.edu/redirect/JWST/jwst-data_analysis_tools/IFU_optimal_extraction/"
filename = BoxPath + "NRS00001-faintQSO-F100LP-G140H-01_1_491_SE_2020-08-25T12h15m00_s3d.fits"

# Open and inspect the file and WCS
# Load with astropy.fits.open
with fits.open(filename, memmap=False) as hdulist:
    sci = hdulist['SCI'].data
    err = hdulist['ERR'].data
    w = wcs.WCS(hdulist[1].header)
    hdr = hdulist[1].header
    hdulist.info()
    print(w)
    
# Load with Spectrum1D    
spec1d = Spectrum1D.read(filename)

# Wavelengths
wavelength = np.array(spec1d.spectral_axis.value)
print(wavelength)

# Sum over spaxels
fnu_sum = np.sum(spec1d.flux, axis=(0, 1))

# List of cube slices for aperture photometry
data = []
var = []
spec1d_len = len(spec1d.spectral_axis.value)
for idx in range(spec1d_len): 
    data.append(sci[idx, :, :])
    var.append(err[idx, :, :])  # variance = err, not variance = err**2.  Squaring the err gives noisy results. 

# Window data and variance (and replace NaNs)
# The existing JWST pipeline window is overgenerous (39x33 instead of the nominal 30x30 pixels)
data_win = np.nan_to_num(np.array(data)[:, 5:-4, 3:])
data_var = np.nan_to_num(np.array(var)[:, 5:-4, 3:]) 
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mAttributeError[0m                            Traceback (most recent call last)
Input [0;32mIn [3][0m, in [0;36m<cell line: 16>[0;34m()[0m
[1;32m     13[0m     [38;5;28mprint[39m(w)
[1;32m     15[0m [38;5;66;03m# Load with Spectrum1D    [39;00m
[0;32m---> 16[0m spec1d [38;5;241m=[39m [43mSpectrum1D[49m[38;5;241;43m.[39;49m[43mread[49m[43m([49m[43mfilename[49m[43m)[49m
[1;32m     18[0m [38;5;66;03m# Wavelengths[39;00m
[1;32m     19[0m wavelength [38;5;241m=[39m np[38;5;241m.[39marray(spec1d[38;5;241m.[39mspectral_axis[38;5;241m.[39mvalue)

File [0;32m/usr/share/miniconda/lib/python3.9/site-packages/astropy/nddata/mixins/ndio.py:59[0m, in [0;36mNDDataRead.__call__[0;34m(self, *args, **kwargs)[0m
[1;32m     58[0m [38;5;28;01mdef[39;00m [38;5;21m__call__[39m([38;5;28mself[39m, [38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[0;32m---> 59[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mregistry[49m[38;5;241;43m.[39;49m[43mread[49m[43m([49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_cls[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m/usr/share/miniconda/lib/python3.9/site-packages/astropy/io/registry/core.py:212[0m, in [0;36mUnifiedInputRegistry.read[0;34m(self, cls, format, cache, *args, **kwargs)[0m
[1;32m    208[0m     [38;5;28mformat[39m [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_get_valid_format(
[1;32m    209[0m         [38;5;124m'[39m[38;5;124mread[39m[38;5;124m'[39m, [38;5;28mcls[39m, path, fileobj, args, kwargs)
[1;32m    211[0m reader [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mget_reader([38;5;28mformat[39m, [38;5;28mcls[39m)
[0;32m--> 212[0m data [38;5;241m=[39m [43mreader[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m    214[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28misinstance[39m(data, [38;5;28mcls[39m):
[1;32m    215[0m     [38;5;66;03m# User has read with a subclass where only the parent class is[39;00m
[1;32m    216[0m     [38;5;66;03m# registered.  This returns the parent class, so try coercing[39;00m
[1;32m    217[0m     [38;5;66;03m# to desired subclass.[39;00m
[1;32m    218[0m     [38;5;28;01mtry[39;00m:

File [0;32m/usr/share/miniconda/lib/python3.9/site-packages/specutils/io/default_loaders/jwst_reader.py:531[0m, in [0;36mjwst_s3d_single_loader[0;34m(filename, **kwargs)[0m
[1;32m    513[0m [38;5;129m@data_loader[39m(
[1;32m    514[0m     [38;5;124m"[39m[38;5;124mJWST s3d[39m[38;5;124m"[39m, identifier[38;5;241m=[39midentify_jwst_s3d_fits, dtype[38;5;241m=[39mSpectrum1D,
[1;32m    515[0m     extensions[38;5;241m=[39m[[38;5;124m'[39m[38;5;124mfits[39m[38;5;124m'[39m], priority[38;5;241m=[39m[38;5;241m10[39m,
[1;32m    516[0m )
[1;32m    517[0m [38;5;28;01mdef[39;00m [38;5;21mjwst_s3d_single_loader[39m(filename, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[1;32m    518[0m     [38;5;124;03m"""[39;00m
[1;32m    519[0m [38;5;124;03m    Loader for JWST s3d 3D rectified spectral data in FITS format.[39;00m
[1;32m    520[0m 
[0;32m   (...)[0m
[1;32m    529[0m [38;5;124;03m        The spectrum contained in the file.[39;00m
[1;32m    530[0m [38;5;124;03m    """[39;00m
[0;32m--> 531[0m     spectrum_list [38;5;241m=[39m [43m_jwst_s3d_loader[49m[43m([49m[43mfilename[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m    532[0m     [38;5;28;01mif[39;00m [38;5;28mlen[39m(spectrum_list) [38;5;241m==[39m [38;5;241m1[39m:
[1;32m    533[0m         [38;5;28;01mreturn[39;00m spectrum_list[[38;5;241m0[39m]

File [0;32m/usr/share/miniconda/lib/python3.9/site-packages/specutils/io/default_loaders/jwst_reader.py:558[0m, in [0;36m_jwst_s3d_loader[0;34m(filename, **kwargs)[0m
[1;32m    555[0m spectra [38;5;241m=[39m []
[1;32m    557[0m [38;5;66;03m# Get a list of GWCS objects from the slits[39;00m
[0;32m--> 558[0m [38;5;28;01mwith[39;00m [43masdf[49m[38;5;241;43m.[39;49m[43mopen[49m[43m([49m[43mfilename[49m[43m)[49m [38;5;28;01mas[39;00m af:
[1;32m    559[0m     wcslist [38;5;241m=[39m [af[38;5;241m.[39mtree[[38;5;124m"[39m[38;5;124mmeta[39m[38;5;124m"[39m][[38;5;124m"[39m[38;5;124mwcs[39m[38;5;124m"[39m]]
[1;32m    561[0m [38;5;28;01mwith[39;00m fits[38;5;241m.[39mopen(filename, memmap[38;5;241m=[39m[38;5;28;01mFalse[39;00m) [38;5;28;01mas[39;00m hdulist:

File [0;32m/usr/share/miniconda/lib/python3.9/site-packages/asdf/asdf.py:1761[0m, in [0;36mopen_asdf[0;34m(fd, uri, mode, validate_checksums, extensions, ignore_version_mismatch, ignore_unrecognized_tag, _force_raw_types, copy_arrays, lazy_load, custom_schema, strict_extension_check, ignore_missing_extensions, _compat, **kwargs)[0m
[1;32m   1750[0m     readonly [38;5;241m=[39m mode [38;5;241m==[39m [38;5;124m"[39m[38;5;124mr[39m[38;5;124m"[39m [38;5;129;01mand[39;00m [38;5;129;01mnot[39;00m copy_arrays
[1;32m   1752[0m instance [38;5;241m=[39m AsdfFile(
[1;32m   1753[0m     ignore_version_mismatch[38;5;241m=[39mignore_version_mismatch,
[1;32m   1754[0m     ignore_unrecognized_tag[38;5;241m=[39mignore_unrecognized_tag,
[0;32m   (...)[0m
[1;32m   1758[0m     _readonly[38;5;241m=[39mreadonly,
[1;32m   1759[0m )
[0;32m-> 1761[0m [38;5;28;01mreturn[39;00m [43mAsdfFile[49m[38;5;241;43m.[39;49m[43m_open_impl[49m[43m([49m
[1;32m   1762[0m [43m    [49m[43minstance[49m[43m,[49m
[1;32m   1763[0m [43m    [49m[43mfd[49m[43m,[49m
[1;32m   1764[0m [43m    [49m[43muri[49m[38;5;241;43m=[39;49m[43muri[49m[43m,[49m
[1;32m   1765[0m [43m    [49m[43mmode[49m[38;5;241;43m=[39;49m[43mmode[49m[43m,[49m
[1;32m   1766[0m [43m    [49m[43mvalidate_checksums[49m[38;5;241;43m=[39;49m[43mvalidate_checksums[49m[43m,[49m
[1;32m   1767[0m [43m    [49m[43mextensions[49m[38;5;241;43m=[39;49m[43mextensions[49m[43m,[49m
[1;32m   1768[0m [43m    [49m[43m_force_raw_types[49m[38;5;241;43m=[39;49m[43m_force_raw_types[49m[43m,[49m
[1;32m   1769[0m [43m    [49m[43mstrict_extension_check[49m[38;5;241;43m=[39;49m[43mstrict_extension_check[49m[43m,[49m
[1;32m   1770[0m [43m    [49m[43mignore_missing_extensions[49m[38;5;241;43m=[39;49m[43mignore_missing_extensions[49m[43m,[49m
[1;32m   1771[0m [43m    [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m,[49m
[1;32m   1772[0m [43m[49m[43m)[49m

File [0;32m/usr/share/miniconda/lib/python3.9/site-packages/asdf/asdf.py:919[0m, in [0;36mAsdfFile._open_impl[0;34m(cls, self, fd, uri, mode, validate_checksums, extensions, _get_yaml_content, _force_raw_types, strict_extension_check, ignore_missing_extensions, **kwargs)[0m
[1;32m    913[0m [38;5;28;01mtry[39;00m:
[1;32m    914[0m     [38;5;66;03m# TODO: this feels a bit circular, try to clean up. Also[39;00m
[1;32m    915[0m     [38;5;66;03m# this introduces another dependency on astropy which may[39;00m
[1;32m    916[0m     [38;5;66;03m# not be desireable.[39;00m
[1;32m    917[0m     [38;5;28;01mfrom[39;00m [38;5;21;01m.[39;00m [38;5;28;01mimport[39;00m fits_embed
[0;32m--> 919[0m     [38;5;28;01mreturn[39;00m [43mfits_embed[49m[38;5;241;43m.[39;49m[43mAsdfInFits[49m[38;5;241;43m.[39;49m[43m_open_impl[49m[43m([49m
[1;32m    920[0m [43m        [49m[43mgeneric_file[49m[43m,[49m
[1;32m    921[0m [43m        [49m[43muri[49m[38;5;241;43m=[39;49m[43muri[49m[43m,[49m
[1;32m    922[0m [43m        [49m[43mvalidate_checksums[49m[38;5;241;43m=[39;49m[43mvalidate_checksums[49m[43m,[49m
[1;32m    923[0m [43m        [49m[43mextensions[49m[38;5;241;43m=[39;49m[43mextensions[49m[43m,[49m
[1;32m    924[0m [43m        [49m[43mignore_version_mismatch[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_ignore_version_mismatch[49m[43m,[49m
[1;32m    925[0m [43m        [49m[43mstrict_extension_check[49m[38;5;241;43m=[39;49m[43mstrict_extension_check[49m[43m,[49m
[1;32m    926[0m [43m        [49m[43mignore_missing_extensions[49m[38;5;241;43m=[39;49m[43mignore_missing_extensions[49m[43m,[49m
[1;32m    927[0m [43m        [49m[43mignore_unrecognized_tag[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_ignore_unrecognized_tag[49m[43m,[49m
[1;32m    928[0m [43m        [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m,[49m
[1;32m    929[0m [43m    [49m[43m)[49m
[1;32m    930[0m [38;5;28;01mexcept[39;00m [38;5;167;01mValueError[39;00m:
[1;32m    931[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[1;32m    932[0m         [38;5;124m"[39m[38;5;124mInput object does not appear to be an ASDF file or a FITS with [39m[38;5;124m"[39m [38;5;241m+[39m [38;5;124m"[39m[38;5;124mASDF extension[39m[38;5;124m"[39m
[1;32m    933[0m     ) [38;5;28;01mfrom[39;00m [38;5;28mNone[39m

File [0;32m/usr/share/miniconda/lib/python3.9/site-packages/asdf/fits_embed.py:283[0m, in [0;36mAsdfInFits._open_impl[0;34m(cls, fd, uri, validate_checksums, extensions, ignore_version_mismatch, ignore_unrecognized_tag, strict_extension_check, ignore_missing_extensions, **kwargs)[0m
[1;32m    280[0m generic_file [38;5;241m=[39m generic_io[38;5;241m.[39mget_file(io[38;5;241m.[39mBytesIO(asdf_extension[38;5;241m.[39mdata), mode[38;5;241m=[39m[38;5;124m"[39m[38;5;124mr[39m[38;5;124m"[39m, uri[38;5;241m=[39muri)
[1;32m    282[0m [38;5;28;01mtry[39;00m:
[0;32m--> 283[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mcls[39;49m[38;5;241;43m.[39;49m[43m_open_asdf[49m[43m([49m
[1;32m    284[0m [43m        [49m[38;5;28;43mself[39;49m[43m,[49m
[1;32m    285[0m [43m        [49m[43mgeneric_file[49m[43m,[49m
[1;32m    286[0m [43m        [49m[43mvalidate_checksums[49m[38;5;241;43m=[39;49m[43mvalidate_checksums[49m[43m,[49m
[1;32m    287[0m [43m        [49m[43mextensions[49m[38;5;241;43m=[39;49m[43mextensions[49m[43m,[49m
[1;32m    288[0m [43m        [49m[43mstrict_extension_check[49m[38;5;241;43m=[39;49m[43mstrict_extension_check[49m[43m,[49m
[1;32m    289[0m [43m        [49m[43mignore_missing_extensions[49m[38;5;241;43m=[39;49m[43mignore_missing_extensions[49m[43m,[49m
[1;32m    290[0m [43m        [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m
[1;32m    291[0m [43m    [49m[43m)[49m
[1;32m    292[0m [38;5;28;01mexcept[39;00m [38;5;167;01mRuntimeError[39;00m:
[1;32m    293[0m     [38;5;28mself[39m[38;5;241m.[39mclose()

File [0;32m/usr/share/miniconda/lib/python3.9/site-packages/asdf/asdf.py:874[0m, in [0;36mAsdfFile._open_asdf[0;34m(cls, self, fd, validate_checksums, extensions, _get_yaml_content, _force_raw_types, strict_extension_check, ignore_missing_extensions, **kwargs)[0m
[1;32m    871[0m tree [38;5;241m=[39m reference[38;5;241m.[39mfind_references(tree, [38;5;28mself[39m)
[1;32m    873[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mversion [38;5;241m<[39m[38;5;241m=[39m versioning[38;5;241m.[39mFILL_DEFAULTS_MAX_VERSION [38;5;129;01mand[39;00m get_config()[38;5;241m.[39mlegacy_fill_schema_defaults:
[0;32m--> 874[0m     [43mschema[49m[38;5;241;43m.[39;49m[43mfill_defaults[49m[43m([49m[43mtree[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[43m,[49m[43m [49m[43mreading[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m)[49m
[1;32m    876[0m [38;5;28;01mif[39;00m get_config()[38;5;241m.[39mvalidate_on_read:
[1;32m    877[0m     [38;5;28;01mtry[39;00m:

File [0;32m/usr/share/miniconda/lib/python3.9/site-packages/asdf/schema.py:702[0m, in [0;36mfill_defaults[0;34m(instance, ctx, reading)[0m
[1;32m    686[0m [38;5;28;01mdef[39;00m [38;5;21mfill_defaults[39m(instance, ctx, reading[38;5;241m=[39m[38;5;28;01mFalse[39;00m):
[1;32m    687[0m     [38;5;124;03m"""[39;00m
[1;32m    688[0m [38;5;124;03m    For any default values in the schema, add them to the tree if they[39;00m
[1;32m    689[0m [38;5;124;03m    don't exist.[39;00m
[0;32m   (...)[0m
[1;32m    700[0m [38;5;124;03m        written).[39;00m
[1;32m    701[0m [38;5;124;03m    """[39;00m
[0;32m--> 702[0m     [43mvalidate[49m[43m([49m[43minstance[49m[43m,[49m[43m [49m[43mctx[49m[43m,[49m[43m [49m[43mvalidators[49m[38;5;241;43m=[39;49m[43mFILL_DEFAULTS[49m[43m,[49m[43m [49m[43mreading[49m[38;5;241;43m=[39;49m[43mreading[49m[43m)[49m

File [0;32m/usr/share/miniconda/lib/python3.9/site-packages/asdf/schema.py:673[0m, in [0;36mvalidate[0;34m(instance, ctx, schema, validators, reading, *args, **kwargs)[0m
[1;32m    670[0m     ctx [38;5;241m=[39m AsdfFile()
[1;32m    672[0m validator [38;5;241m=[39m get_validator(schema, ctx, validators, ctx[38;5;241m.[39mresolver, [38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs)
[0;32m--> 673[0m [43mvalidator[49m[38;5;241;43m.[39;49m[43mvalidate[49m[43m([49m[43minstance[49m[43m,[49m[43m [49m[43m_schema[49m[38;5;241;43m=[39;49m[43m([49m[43mschema[49m[43m [49m[38;5;129;43;01mor[39;49;00m[43m [49m[38;5;28;43;01mNone[39;49;00m[43m)[49m[43m)[49m
[1;32m    675[0m additional_validators [38;5;241m=[39m [_validate_large_literals]
[1;32m    676[0m [38;5;28;01mif[39;00m ctx[38;5;241m.[39mversion [38;5;241m>[39m[38;5;241m=[39m versioning[38;5;241m.[39mRESTRICTED_KEYS_MIN_VERSION:

File [0;32m/usr/share/miniconda/lib/python3.9/site-packages/jsonschema/validators.py:266[0m, in [0;36mcreate.<locals>.Validator.validate[0;34m(self, *args, **kwargs)[0m
[1;32m    265[0m [38;5;28;01mdef[39;00m [38;5;21mvalidate[39m([38;5;28mself[39m, [38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[0;32m--> 266[0m     [38;5;28;01mfor[39;00m error [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39miter_errors([38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[1;32m    267[0m         [38;5;28;01mraise[39;00m error

File [0;32m/usr/share/miniconda/lib/python3.9/site-packages/asdf/schema.py:309[0m, in [0;36m_create_validator.<locals>.ASDFValidator.iter_errors[0;34m(self, instance, _schema)[0m
[1;32m    307[0m         [38;5;28;01mif[39;00m s:
[1;32m    308[0m             [38;5;28;01mwith[39;00m [38;5;28mself[39m[38;5;241m.[39mresolver[38;5;241m.[39min_scope(schema_uri):
[0;32m--> 309[0m                 [38;5;28;01mfor[39;00m x [38;5;129;01min[39;00m [38;5;28msuper[39m(ASDFValidator, [38;5;28mself[39m)[38;5;241m.[39miter_errors(instance, s):
[1;32m    310[0m                     [38;5;28;01myield[39;00m x
[1;32m    312[0m [38;5;28;01mif[39;00m [38;5;28misinstance[39m(instance, [38;5;28mdict[39m):

File [0;32m/usr/share/miniconda/lib/python3.9/site-packages/jsonschema/validators.py:242[0m, in [0;36mcreate.<locals>.Validator.iter_errors[0;34m(self, instance, _schema)[0m
[1;32m    239[0m     [38;5;28;01mcontinue[39;00m
[1;32m    241[0m errors [38;5;241m=[39m validator([38;5;28mself[39m, v, instance, _schema) [38;5;129;01mor[39;00m ()
[0;32m--> 242[0m [38;5;28;01mfor[39;00m error [38;5;129;01min[39;00m errors:
[1;32m    243[0m     [38;5;66;03m# set details if not already set by the called fn[39;00m
[1;32m    244[0m     error[38;5;241m.[39m_set(
[1;32m    245[0m         validator[38;5;241m=[39mk,
[1;32m    246[0m         validator_value[38;5;241m=[39mv,
[1;32m    247[0m         instance[38;5;241m=[39minstance,
[1;32m    248[0m         schema[38;5;241m=[39m_schema,
[1;32m    249[0m     )
[1;32m    250[0m     [38;5;28;01mif[39;00m k [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m {[38;5;124m"[39m[38;5;124mif[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124m$ref[39m[38;5;124m"[39m}:

File [0;32m/usr/share/miniconda/lib/python3.9/site-packages/asdf/schema.py:174[0m, in [0;36mvalidate_fill_default[0;34m(validator, properties, instance, schema)[0m
[1;32m    171[0m     [38;5;28;01mif[39;00m [38;5;124m"[39m[38;5;124mdefault[39m[38;5;124m"[39m [38;5;129;01min[39;00m subschema:
[1;32m    172[0m         instance[38;5;241m.[39msetdefault([38;5;28mproperty[39m, subschema[[38;5;124m"[39m[38;5;124mdefault[39m[38;5;124m"[39m])
[0;32m--> 174[0m [38;5;28;01mfor[39;00m err [38;5;129;01min[39;00m mvalidators[38;5;241m.[39mDraft4Validator[38;5;241m.[39mVALIDATORS[[38;5;124m"[39m[38;5;124mproperties[39m[38;5;124m"[39m](validator, properties, instance, schema):
[1;32m    175[0m     [38;5;28;01myield[39;00m err

File [0;32m/usr/share/miniconda/lib/python3.9/site-packages/jsonschema/_validators.py:332[0m, in [0;36mproperties[0;34m(validator, properties, instance, schema)[0m
[1;32m    330[0m [38;5;28;01mfor[39;00m [38;5;28mproperty[39m, subschema [38;5;129;01min[39;00m properties[38;5;241m.[39mitems():
[1;32m    331[0m     [38;5;28;01mif[39;00m [38;5;28mproperty[39m [38;5;129;01min[39;00m instance:
[0;32m--> 332[0m         [38;5;28;01myield from[39;00m validator[38;5;241m.[39mdescend(
[1;32m    333[0m             instance[[38;5;28mproperty[39m],
[1;32m    334[0m             subschema,
[1;32m    335[0m             path[38;5;241m=[39m[38;5;28mproperty[39m,
[1;32m    336[0m             schema_path[38;5;241m=[39m[38;5;28mproperty[39m,
[1;32m    337[0m         )

File [0;32m/usr/share/miniconda/lib/python3.9/site-packages/jsonschema/validators.py:258[0m, in [0;36mcreate.<locals>.Validator.descend[0;34m(self, instance, schema, path, schema_path)[0m
[1;32m    257[0m [38;5;28;01mdef[39;00m [38;5;21mdescend[39m([38;5;28mself[39m, instance, schema, path[38;5;241m=[39m[38;5;28;01mNone[39;00m, schema_path[38;5;241m=[39m[38;5;28;01mNone[39;00m):
[0;32m--> 258[0m     [38;5;28;01mfor[39;00m error [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39mevolve(schema[38;5;241m=[39mschema)[38;5;241m.[39miter_errors(instance):
[1;32m    259[0m         [38;5;28;01mif[39;00m path [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m    260[0m             error[38;5;241m.[39mpath[38;5;241m.[39mappendleft(path)

File [0;32m/usr/share/miniconda/lib/python3.9/site-packages/asdf/schema.py:291[0m, in [0;36m_create_validator.<locals>.ASDFValidator.iter_errors[0;34m(self, instance, _schema)[0m
[1;32m    289[0m tag [38;5;241m=[39m [38;5;28mgetattr[39m(instance, [38;5;124m"[39m[38;5;124m_tag[39m[38;5;124m"[39m, [38;5;28;01mNone[39;00m)
[1;32m    290[0m [38;5;28;01mif[39;00m tag [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[0;32m--> 291[0m     [38;5;28;01mif[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mserialization_context[49m[38;5;241m.[39mextension_manager[38;5;241m.[39mhandles_tag_definition(tag):
[1;32m    292[0m         tag_def [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mserialization_context[38;5;241m.[39mextension_manager[38;5;241m.[39mget_tag_definition(tag)
[1;32m    293[0m         schema_uris [38;5;241m=[39m tag_def[38;5;241m.[39mschema_uris

[0;31mAttributeError[0m: 'ASDFValidator' object has no attribute 'serialization_context'
AttributeError: 'ASDFValidator' object has no attribute 'serialization_context'

